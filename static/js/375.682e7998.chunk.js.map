{"version":3,"file":"static/js/375.682e7998.chunk.js","mappings":"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","sources":["API/moviesAPI.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'e38ebe2f0be6ffcd2bd323ee6fa50d71';\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nexport const getPopularMovies = async () => {\n  const data = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n  return data.data;\n};\n\nexport const getMoviesById = async id => {\n  const data = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n\n  return data.data;\n};\n\nexport const getMovieReviewsById = async id => {\n  const data = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n\n  return data.data;\n};\n\nexport const getMovieCastById = async id => {\n  const data = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return data.data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const data = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data.data;\n};\n\nexport const getGenresList = async () => {\n  const data = await axios.get(`/genre/movie/list?api_key=${API_KEY}`);\n  return data.data;\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Section = styled.section`\n  width: 100%;\n  background-color: #e2e2e2;\n  padding: 32px 0 40px;\n`;\n\nexport const BackLink = styled(NavLink)`\n  padding: 10px;\n  color: #515151;\n  font-size: 18px;\n  font-weight: 700;\n  margin-left: 10px;\n  border: 3px solid tomato;\n  border-radius: 4px;\n\n  &.active {\n    color: tomato;\n    border-color: #515151;\n  }\n  &:hover {\n    color: tomato;\n  }\n`;\n\nexport const CardConteiner = styled.div`\n  height: 550px;\n  display: flex;\n  align-items: center;\n  background-color: tomato;\n  border-radius: 10px;\n`;\n\nexport const CardImg = styled.img`\n  height: 100%;\n  object-fit: cover;\n  border-radius: 10px;\n`;\n\nexport const MovieConteiner = styled.div`\n  display: flex;\n  margin-top: 25px;\n`;\n\nexport const DiscriptionMovie = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding-left: 20px;\n`;\n\nexport const Title = styled.h2`\n  color: #515151;\n  padding: 10px;\n`;\n\nexport const Score = styled.h3`\n  color: #515151;\n  padding: 10px;\n`;\n\nexport const Overview = styled.h3`\n  display: flex;\n  color: #515151;\n  padding: 10px;\n`;\n\nexport const Genres = styled.p`\n  display: flex;\n  color: #515151;\n  padding: 10px;\n`;\n\nexport const DetailsNav = styled(NavLink)`\n  padding: 12px;\n  color: #515151;\n  font-size: 18px;\n  font-weight: 700;\n  margin-left: 10px;\n  border: 3px solid tomato;\n  border-radius: 4px;\n\n  &.active {\n    color: tomato;\n    border-color: #515151;\n  }\n  &:hover {\n    color: tomato;\n  }\n`;\n\nexport const DetailsNavList = styled.ul`\n  display: flex;\n`;\n\nexport const DetailsNavItems = styled.li`\n  display: flex;\n`;\n","import { getMoviesById } from 'API/moviesAPI';\nimport { Suspense, useEffect, useState, lazy } from 'react';\nimport { useParams, useLocation, Routes, Route } from 'react-router-dom';\nimport {\n  BackLink,\n  Section,\n  CardConteiner,\n  CardImg,\n  MovieConteiner,\n  DiscriptionMovie,\n  Title,\n  Score,\n  Overview,\n  DetailsNav,\n  DetailsNavList,\n  DetailsNavItems,\n  Genres,\n} from './MovieDetails.styled';\n\nconst Cast = lazy(() => import('../Cast/Cast'));\nconst Reviews = lazy(() => import('../Reviews/Reviews'));\n\nconst MOVIES_DATA = {\n  title: '',\n  poster_path: '',\n  vote_average: '',\n  overview: '',\n  genres: [],\n};\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(MOVIES_DATA);\n  const location = useLocation();\n\n\n  useEffect(() => {\n    getMoviesById(movieId).then(setMovie).catch(`Error`);\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  const { title, poster_path, vote_average, overview, genres } = movie;\n  const movieGenres = genres.map(item => item.name).join(', ');\n\n  const backLinkHref = location?.state?.from ?? '/';\n\n  return (\n    <>\n      <Section>\n        <BackLink to={backLinkHref}>Go to back</BackLink>\n        <MovieConteiner>\n          <CardConteiner>\n            <CardImg\n              src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n              alt={title}\n            />\n          </CardConteiner>\n          <DiscriptionMovie>\n            <Title>{title}</Title>\n            <Score>User score: {vote_average}</Score>\n            <Overview>Overview: {overview}</Overview>\n            <Genres>Genres: {movieGenres}</Genres>\n            <DetailsNavList>\n              <DetailsNavItems>\n                <DetailsNav to=\"cast\" state={location.state}>Cast</DetailsNav>\n              </DetailsNavItems>\n              <DetailsNavItems>\n                <DetailsNav to=\"reviews\" state={location.state}>Reviews</DetailsNav>\n              </DetailsNavItems>\n            </DetailsNavList>\n          </DiscriptionMovie>\n        </MovieConteiner>\n        <Suspense fallback={<div>Loading page...</div>}>\n          <Routes>\n            <Route path=\"cast\" element={<Cast id={movieId} />} />\n            <Route path=\"reviews\" element={<Reviews id={movieId} />} />\n          </Routes>\n        </Suspense>\n      </Section>\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["API_KEY","axios","getPopularMovies","data","getMoviesById","id","getMovieReviewsById","getMovieCastById","getMoviesByQuery","query","Section","styled","BackLink","NavLink","CardConteiner","CardImg","MovieConteiner","DiscriptionMovie","Title","Score","Overview","Genres","DetailsNav","DetailsNavList","DetailsNavItems","Cast","lazy","Reviews","MOVIES_DATA","title","poster_path","vote_average","overview","genres","movieId","useParams","useState","movie","setMovie","location","useLocation","useEffect","then","catch","movieGenres","map","item","name","join","backLinkHref","state","from","to","src","alt","Suspense","fallback","path","element"],"sourceRoot":""}