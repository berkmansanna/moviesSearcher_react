{"version":3,"file":"static/js/779.ee55c27c.chunk.js","mappings":"4OAEaA,EAAUC,EAAAA,GAAAA,QAAH,oJAQPC,EAAcD,EAAAA,GAAAA,GAAH,8DAKXE,EAAcF,EAAAA,GAAAA,GAAH,mGAMXG,EAAaH,EAAAA,GAAAA,GAAH,6DAKVI,EAAgBJ,EAAAA,GAAAA,EAAH,+E,SCoB1B,EAjCgB,SAAC,GAAY,IAAVK,EAAS,EAATA,GACjB,GAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KASA,IANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAoBL,GACjBM,MAAK,SAAAC,GAAI,OAAIJ,EAAWI,EAAKC,YAC7BC,MAFH,WAGC,CAACT,IAECE,EAIL,OACE,SAACR,EAAD,UACGQ,EAAQQ,OAAS,GAChB,SAACd,EAAD,UACGM,EAAQS,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQZ,EAAkB,EAAlBA,GAAIa,EAAc,EAAdA,QAC1B,OACI,UAAChB,EAAD,YACE,UAACC,EAAD,sBAAqBc,MACrB,SAACb,EAAD,UAAgBc,MAFAb,SAQ1B","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.section`\n  width: 100%;\n  border-top: 3px solid tomato;\n  background-color: #e2e2e2;\n  padding: 32px 0 40px;\n  margin-top: 5px;\n`;\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const ReviewsItem = styled.li`\n  display: flex;\n  margin-top: 10px;\n  border-bottom: 3px solid tomato;\n`;\n\nexport const AuthorName = styled.h2`\n  color: #515151;\n  padding: 10px;\n`;\n\nexport const ContentReview = styled.p`\n  display: flex;\n  color: #515151;\n  padding: 10px;\n`;\n","import { getMovieReviewsById } from 'API/moviesAPI';\nimport { useEffect, useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport {\n  Section,\n  ReviewsList,\n  ReviewsItem,\n  AuthorName,\n  ContentReview,\n} from './Reviews.styled';\n\nconst Reviews = ({ id }) => {\n  const [reviews, setReviews] = useState(null);\n  \n\n  useEffect(() => {\n    getMovieReviewsById(id)\n      .then(data => setReviews(data.results))\n      .catch(`Error`);\n  }, [id]);\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <Section>\n      {reviews.length > 0 ? (\n        <ReviewsList>\n          {reviews.map(({ author, id, content }) => {\n            return (\n                <ReviewsItem key={id}>\n                  <AuthorName>Author: {author}</AuthorName>\n                  <ContentReview>{content}</ContentReview>\n                </ReviewsItem>\n            );\n          })}\n        </ReviewsList>\n      ) : (\n        <p>We don't have any reviews</p>\n      )}\n    </Section>\n  );\n};\nexport default Reviews;\n\nReviews.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n"],"names":["Section","styled","ReviewsList","ReviewsItem","AuthorName","ContentReview","id","useState","reviews","setReviews","useEffect","getMovieReviewsById","then","data","results","catch","length","map","author","content"],"sourceRoot":""}